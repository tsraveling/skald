%YAML 1.2
---
# See http://www.sublimetext.com/docs/syntax.html
file_extensions:
  - ska
scope: source.skald
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.skald
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '//'
      scope: punctuation.definition.comment.skald
      push: line_comment

    # Text
    - match: '^[a-zA-Z0-9\-]+:'
      scope: variable.language.skald
      push: attributed_string

    # Terniary
    - match: '^\s*\?\s*'
      scope: keyword.operator
      push: meta_line

    # Mutation
    - match: '^\s*~\s*'
      scope: string
      push: meta_line

    # Code block
    - match: '^[ \t]*\*[ \t]*'
      scope: variable.language.skald
      push: line_comment

    # Transition
    - match: '^\s*(\-\>.*)'
      scope: variable.parameter.skald

    # Signal
    - match: '^\s*(\:.*)$'
      scope: constant.other

    # Testbeds
    - match: '^(@testbed|@end)\b'
      scope: support.macro.skald

    # Tags
    - match: '^(#.*)$'
      scope: "variable.parameter.skald, markup.bold"
      # Tags
    - match: '^[ \t]*END$'
      scope: "variable.language.skald, markup.bold"

    # Choices
    - match: '^\s*>\s*'
      scope: variable.language.skald
      push: player_choice
  
  player_choice:
    - meta_scope: punctuation.section
    - match: '//.*$'
      scope: comment
    - match: $
      pop: true

  attributed_string:
    - meta_scope: punctuation.section
    - match: '//.*$'
      scope: comment
    - match: $
      pop: true

  double_quoted_string:
    - meta_scope: string.quoted.double.skald
    - match: '\\.'
      scope: constant.character.escape.skald
    - match: '"'
      scope: punctuation.definition.string.end.skald
      pop: true

  line_comment:
    - meta_scope: comment.line.skald
    - match: $
      pop: true

  meta_line:
    - meta_scope: support.type.property-name
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.skald
    - match: '//.*$'
      scope: comment
    - match: $
      pop: true
